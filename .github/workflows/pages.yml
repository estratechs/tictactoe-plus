name: Build & Deploy (GH Pages â€¢ tictactoe-plus)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

env:
  PROJECT_DIR: tictactoe-plus

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            ${{ env.PROJECT_DIR }}/package-lock.json
            ${{ env.PROJECT_DIR }}/pnpm-lock.yaml
            ${{ env.PROJECT_DIR }}/yarn.lock

      - name: Debug: Show project tree
        run: |
          echo "Working directory: $PROJECT_DIR"
          ls -la "$PROJECT_DIR" || true
          echo "Node:" && node -v
          echo "NPM:" && npm -v

      - name: Detect package manager
        id: pm
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
          elif [ -f yarn.lock ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
          fi

      - name: Setup pnpm (if needed)
        if: steps.pm.outputs.manager == 'pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          case "${{ steps.pm.outputs.manager }}" in
            pnpm) pnpm install --frozen-lockfile ;;
            yarn) yarn install --frozen-lockfile ;;
            npm)  npm ci || npm install ;;
          esac

      - name: Ensure Vite present
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          npx --yes vite --version >/dev/null 2>&1 || npm i -D vite @vitejs/plugin-react

      - name: Typecheck (non-blocking)
        working-directory: ${{ env.PROJECT_DIR }}
        run: npx tsc -p tsconfig.json --noEmit || true

      - name: Build
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          set -euxo pipefail
          if npm run | grep -qE '^  build'; then
            npm run build
          else
            echo "No build script found, running: npx vite build"
            npx vite build
          fi

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.PROJECT_DIR }}/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
