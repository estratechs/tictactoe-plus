/* Mobile UX overrides — compact gaps on phones */

/* 1) Global base: fluid type, modest padding */
@media (max-width: 480px){
  html { font-size: clamp(15px, 3.6vw, 17px); }
  body { padding: 12px; }
}

/* 2) Buttons & tap targets */
button, [role="button"] { min-height: 44px; min-width: 44px; -webkit-tap-highlight-color: transparent; }

/* 3) Floating menu safe-areas */
#pwa-fab {
  right: calc(16px + env(safe-area-inset-right));
  bottom: calc(16px + env(safe-area-inset-bottom));
  padding: 14px 16px;
}
#pwa-panel {
  right: calc(16px + env(safe-area-inset-right));
  bottom: calc(80px + env(safe-area-inset-bottom));
  width: min(92vw, 320px);
  max-height: min(70vh, 520px);
  overflow: auto;
}

/* 4) Board grid — same selectors, *tighter gaps on mobile* */
.board, #board, [data-board], .board-grid {
  margin: 12px auto 20px !important;
  width: min(92vw, 460px) !important;
  display: grid !important;
  grid-template-columns: repeat(3, 1fr) !important;
  gap: clamp(4px, 1.6vw, 10px) !important; /* ↓ was 2.8vw up to 14px */
}

/* Extra-tight on very small screens or short heights */
@media (max-width: 400px), (max-height: 700px){
  .board, #board, [data-board], .board-grid {
    gap: clamp(3px, 1.2vw, 8px) !important;
  }
}

/* 5) Tiles — keep big, but allow slightly smaller marks to fit tighter gaps */
.board button, #board button, [data-board] button,
.board .tile, #board .tile, [data-board] .tile,
.tile, .Tile {
  aspect-ratio: 1 / 1;
  border-radius: 14px;
  font-size: clamp(24px, 9.2vw, 52px); /* ↓ min was 28px */
  line-height: 1;
  touch-action: manipulation;
}

/* 6) Center controls/score on narrow screens */
@media (max-width: 480px){
  .controls, #controls, [data-controls],
  .score, #score, [data-score] {
    display: flex; flex-wrap: wrap; gap: 8px; justify-content: center;
    text-align: center; margin-inline: auto;
  }
}

/* 7) Hide desktop-only tips on touch devices */
@media (hover: none) and (pointer: coarse){
  .tip, .hover-tip, [data-desktop-tip] { display: none !important; }
}

/* 8) Dynamic viewport unit helper (use var(--vh) if needed) */
:root { --vh: 1vh; }
@supports (height: 100dvh) { :root { --vh: 1dvh; } }
